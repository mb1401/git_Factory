entity Ressource {
	code String required minlenght(3) maxlength(25),
	cout Float
}

entity Ordinateur {
	code String required minlenght(3) maxlength(25),
	cout Float required,
	processeur Processeur,
    ram Integer,
    quantiteDD Integer,
    dateAchat LocalDate required
    
}

entity VideoProjecteur {
	code String required minlenght(3) maxlength(25),
	cout Float required
}

entity Salle {
	nom String required minlenght(3) maxlength(25),
	cout Float,
	capacite Integer
    
}

entity Formation {
	dateDebut LocalDate required,
    dateFin LocalDate required,
	description String 
}

entity Module {
	titre String required minlenght(3) maxlength(25),
	contenu String,
	objectif String,
	niveau Niveau,
	dateDebut LocalDate required,
    dateFin LocalDate required
}

entity Utilisateur {
	nom String required minlenght(3) maxlength(25),
	prenom String required minlenght(3) maxlength(25),
	numeroRue String maxlength(25),
    codePostal String  maxlength(25),
    ville String maxlength(25),
    pays String maxlength(25),
    mail String maxlength(25),
    numeroTel String maxlength(25),
    username String maxlength(25),
    password String maxlength(25),
    enable Boolean
}

entity Technicien {
	nom String required minlenght(3) maxlength(25),
	prenom String required minlenght(3) maxlength(25),
	numeroRue String maxlength(25),
    codePostal String  maxlength(25),
    ville String maxlength(25),
    pays String maxlength(25),
    mail String maxlength(25),
    numeroTel String maxlength(25),
    username String maxlength(25),
    password String maxlength(25),
    enable Boolean
}
entity Gestionnaire {
	nom String required minlenght(3) maxlength(25),
	prenom String required minlenght(3) maxlength(25),
	numeroRue String maxlength(25),
    codePostal String  maxlength(25),
    ville String maxlength(25),
    pays String maxlength(25),
    mail String maxlength(25),
    numeroTel String maxlength(25),
    username String maxlength(25),
    password String maxlength(25),
    enable Boolean
}
entity Stagiaire {
	nom String required minlenght(3) maxlength(25),
	prenom String required minlenght(3) maxlength(25),
	numeroRue String maxlength(25),
    codePostal String  maxlength(25),
    ville String maxlength(25),
    pays String maxlength(25),
    mail String maxlength(25),
    numeroTel String maxlength(25),
    username String maxlength(25),
    password String maxlength(25),
    enable Boolean
}
entity Formateur {
	nom String required minlenght(3) maxlength(25),
	prenom String required minlenght(3) maxlength(25),
	numeroRue String maxlength(25),
    codePostal String  maxlength(25),
    ville String maxlength(25),
    pays String maxlength(25),
    mail String maxlength(25),
    numeroTel String maxlength(25),
    username String maxlength(25),
    password String maxlength(25),
    enable Boolean
}
entity Matiere {
	nom String required minlenght(3) maxlength(25)
}
enum Processeur {
    P1, P2, P3
}
enum Niveau {
    FACILE, MOYEN, DIFFICILE
}
//relations OneToOne




relationship ManyToMany {
	
    Matiere{formateur} to Formateur{matiere}
}

// defining multiple OneToMany relationships with comments
relationship OneToMany {
	Formation{stagiaire} to  Stagiaire{formation},
	 Formateur{formation} to Formation{formateur}
	Gestionnaire{formation} to Formation{gestionnaire}
    Formation{module} to Module{formation}
	Formateur{module} to Module{formateur}
    Matiere{module} to Module{matiere}
    Salle{module} to Module{salle}
    VideoProjecteur{module} to Module{VideoProjecteur}
    Ordinateur{stagiaire} to Stagiaire{ordinateur}
}
// Set pagination options


dto * with mapstruct

// Set service options to all except few
service all with serviceImpl 
// Set an angular suffix
angularSuffix * with angularS




