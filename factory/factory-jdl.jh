entity Ressource {
	cout Float
}

entity Ordinateur {
	processeur Processeur
    ram Integer
    quantiteDD Integer
    dateAchat LocalDate
    
}

entity VideoProjecteur {
	
}

entity Salle {
	capacite Integer
    
}

entity Formation {
	dateDebut LocalDate
    dateFin LocalDate
	description String
}

entity Module {
	tire String,
	contenu String,
	objectif String,
	niveau Niveau,
	dateDebut LocalDate,
    dateFin LocalDate,
}

entity Utilisateur {
	nom String,
	prenom String,
	numeroRue String
    rue String
    codePostal String
    ville String
    pays String
    mail String
    numeroTel String
    username String
    password String
    enable Boolean
}

entity Technicien {

}
entity Gestionnaire {
	
}
entity Stagiaire {
	
}
entity Formateur {
	
}
entity Matiere {
	nom String
}
enum Processeur {
    P1, P2, P3
}
enum Niveau {
    FACILE, MOYEN, DIFFICILE
}
//relations OneToOne




relationship ManyToMany {
	
    Matiere{formateur} to Formateur{matiere}
}

// defining multiple OneToMany relationships with comments
relationship OneToMany {
	Formation{stagiaire} to  Stagiaire{formation},
	 Formateur{formation} to Formation{formateur}
	Gestionnaire{formation} to Formation{gestionnaire}
    Formation{module} to Module{formation}
	Formateur{module} to Module{formateur}
    Matiere{module} to Module{matiere}
    Salle{module} to Module{salle}
    VideoProjecteur{module} to Module{VideoProjecteur}
    Ordinateur{stagiaire} to Stagiaire{ordinateur}
}
// Set pagination options


dto * with mapstruct

// Set service options to all except few
service all with serviceImpl 
// Set an angular suffix
angularSuffix * with angularS




